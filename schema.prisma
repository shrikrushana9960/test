// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.myprisma/client"
}

model User {
  id                           String    @id @default(cuid())
  name                         String    @default("")
  email                        String    @unique @default("")
  emailVerified                Boolean   @default(false)
  emailVerificationToken       String    @default("")
  emailVerificationTokenExpiry DateTime?
  provider                     String?
  password                     String?
  createdAt                    DateTime? @default(now())
  role                         String    @default("ACCOUNT")
  from_Product_vendor          Product[] @relation("Product_vendor")
  from_Order_customer          Order[]   @relation("Order_customer")
  from_Payment_vendor          Payment[] @relation("Payment_vendor")
}

model Product {
  id                        String         @id @default(cuid())
  title                     String         @default("")
  description               String         @default("")
  price                     Decimal?       @postgresql.Decimal(18, 4)
  meta                      String         @default("")
  hsnCode                   String         @default("")
  vendor                    User?          @relation("Product_vendor", fields: [vendorId], references: [id])
  vendorId                  String?        @map("vendor")
  from_ProductImage_product ProductImage[] @relation("ProductImage_product")
  from_OrderItem_product    OrderItem[]    @relation("OrderItem_product")

  @@index([vendorId])
}

model ProductImage {
  id        String   @id @default(cuid())
  image     String   @default("")
  order     Int?
  product   Product? @relation("ProductImage_product", fields: [productId], references: [id])
  productId String?  @map("product")

  @@index([productId])
}

model OrderItem {
  id               String   @id @default(cuid())
  product          Product? @relation("OrderItem_product", fields: [productId], references: [id])
  productId        String?  @map("product")
  title            String   @default("")
  quantity         Int?
  price            Decimal? @postgresql.Decimal(18, 4)
  tax              Decimal? @postgresql.Decimal(18, 4)
  from_Order_items Order[]  @relation("Order_items")

  @@index([productId])
}

model Order {
  id                 String      @id @default(cuid())
  customer           User?       @relation("Order_customer", fields: [customerId], references: [id])
  customerId         String?     @map("customer")
  items              OrderItem[] @relation("Order_items")
  payments           Payment[]   @relation("Order_payments")
  from_Payment_order Payment[]   @relation("Payment_order")

  @@index([customerId])
}

model Payment {
  id                  String    @id @default(cuid())
  order               Order?    @relation("Payment_order", fields: [orderId], references: [id])
  orderId             String?   @map("order")
  amount              Decimal?  @postgresql.Decimal(18, 4)
  date                DateTime?
  vendor              User?     @relation("Payment_vendor", fields: [vendorId], references: [id])
  vendorId            String?   @map("vendor")
  from_Order_payments Order[]   @relation("Order_payments")

  @@index([orderId])
  @@index([vendorId])
}
